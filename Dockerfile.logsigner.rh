FROM registry.redhat.io/ubi9/go-toolset:1.24@sha256:6fd64cd7f38a9b87440f963b6c04953d04de65c35b9672dbd7f1805b0ae20d09 as builder AS builder
ENV APP_ROOT=/opt/app-root
ENV GOPATH=$APP_ROOT
ENV CGO_ENABLED=1
ENV -buildvcs=false
ENV GOEXPERIMENT=strictfipsruntime

WORKDIR $APP_ROOT/src/
ADD go.mod go.sum $APP_ROOT/src/
RUN go mod download
RUN git config --global --add safe.directory /opt/app-root/src

# Add source code
ADD ./ $APP_ROOT/src/

RUN go build -mod=mod -v ./cmd/trillian_log_signer 

# Multi-Stage production build
FROM registry.access.redhat.com/ubi9/ubi-minimal@sha256:6d5a6576c83816edcc0da7ed62ba69df8f6ad3cbe659adde2891bfbec4dbf187 AS deploy

# Retrieve the binary from the previous stage
COPY --from=builder /opt/app-root/src/trillian_log_signer /

LABEL description="Trillian is an implementation of the concepts described in the Verifiable Data Structures white paper, which in turn is an extension and generalisation of the ideas which underpin Certificate Transparency."
LABEL io.k8s.description="Trillian is an implementation of the concepts described in the Verifiable Data Structures white paper."
LABEL io.k8s.display-name="trillian_log_signer"
LABEL io.openshift.tags="trillian-logsigner trusted-signer"
LABEL summary="Provides the trillian logsigner binary for running trillian logsigner"
LABEL com.redhat.component="trillian_log_signer"
LABEL name="trillian_log_signer"

# Set the binary as the entrypoint of the container
ENTRYPOINT ["/trillian_log_signer"]
