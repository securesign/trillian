FROM registry.redhat.io/ubi9/go-toolset:9.6@sha256:7b1828de52c3bac600a71b81996bf748776a456181a45e2b329b39702cf6486f AS builder
ENV APP_ROOT=/opt/app-root
ENV GOPATH=$APP_ROOT
ENV CGO_ENABLED=1
ENV -buildvcs=false
ENV GOEXPERIMENT=strictfipsruntime

WORKDIR $APP_ROOT/src/
ADD go.mod go.sum $APP_ROOT/src/
RUN go mod download
RUN git config --global --add safe.directory /opt/app-root/src

# Add source code
ADD ./ $APP_ROOT/src/

RUN go build -mod=mod -v ./cmd/trillian_log_server

# Multi-Stage production build
FROM registry.access.redhat.com/ubi9/ubi-minimal@sha256:34880b64c07f28f64d95737f82f891516de9a3b43583f39970f7bf8e4cfa48b7 AS deploy

# Retrieve the binary from the previous stage
COPY --from=builder /opt/app-root/src/trillian_log_server /
COPY LICENSE /licenses/license.txt

LABEL description="Trillian is an implementation of the concepts described in the Verifiable Data Structures white paper, which in turn is an extension and generalisation of the ideas which underpin Certificate Transparency."
LABEL io.k8s.description="Trillian is an implementation of the concepts described in the Verifiable Data Structures white paper."
LABEL io.k8s.display-name="trillian_log_server"
LABEL io.openshift.tags="trillian-logserver trusted-signer"
LABEL summary="Provides the trillian logserver binary for running trillian logserver"
LABEL com.redhat.component="trillian_log_server"
LABEL name="rhtas/trillian-logserver-rhel9"

USER 65532:65532

# Set the binary as the entrypoint of the container
ENTRYPOINT ["/trillian_log_server"]
