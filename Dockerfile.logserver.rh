FROM registry.access.redhat.com/ubi9/go-toolset@sha256:ab6e4ea87075b71c67cae7c5f5131ce4508ac62d5c1b048781fed310573b4e95 AS builder
ENV APP_ROOT=/opt/app-root
ENV GOPATH=$APP_ROOT
ENV CGO_ENABLED=false
ENV -buildvcs=false

WORKDIR $APP_ROOT/src/
ADD go.mod go.sum $APP_ROOT/src/
RUN go mod download
RUN git config --global --add safe.directory /opt/app-root/src

# Add source code
ADD ./ $APP_ROOT/src/

RUN go build -v ./cmd/trillian_log_server

# Multi-Stage production build
FROM registry.access.redhat.com/ubi9/ubi-minimal@sha256:efadc50470c32141c257341694c6312234c0700e0407ed2a60c8b5c26b6af6fc AS deploy

# Retrieve the binary from the previous stage
COPY --from=builder /opt/app-root/src/trillian_log_server /

LABEL description="Trillian is an implementation of the concepts described in the Verifiable Data Structures white paper, which in turn is an extension and generalisation of the ideas which underpin Certificate Transparency."
LABEL io.k8s.description="Trillian is an implementation of the concepts described in the Verifiable Data Structures white paper."
LABEL io.k8s.display-name="trillian_log_server"
LABEL io.openshift.tags="trillian-logserver trusted-signer"
LABEL summary="Provides the trillian logserver binary for running trillian logserver"
LABEL com.redhat.component="trillian_log_server"
LABEL name="trillian_log_server"

# Set the binary as the entrypoint of the container
ENTRYPOINT ["/trillian_log_server"]
