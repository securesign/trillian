FROM registry.redhat.io/ubi9/go-toolset:9.6@sha256:81d9cb51feb0b56e3d87a73c2237bebaa80b28e4d5791c1da1140eae50225e2f AS builder
ENV APP_ROOT=/opt/app-root
ENV GOPATH=$APP_ROOT
ENV CGO_ENABLED=1
ENV -buildvcs=false
ENV GOEXPERIMENT=strictfipsruntime

WORKDIR $APP_ROOT/src/
ADD go.mod go.sum $APP_ROOT/src/
RUN go mod download
RUN git config --global --add safe.directory /opt/app-root/src

# Add source code
ADD ./ $APP_ROOT/src/

RUN go build -mod=mod -v ./cmd/trillian_log_server

# Multi-Stage production build
FROM registry.access.redhat.com/ubi9/ubi-minimal@sha256:8d905a93f1392d4a8f7fb906bd49bf540290674b28d82de3536bb4d0898bf9d7 AS deploy

# Retrieve the binary from the previous stage
COPY --from=builder /opt/app-root/src/trillian_log_server /

LABEL description="Trillian is an implementation of the concepts described in the Verifiable Data Structures white paper, which in turn is an extension and generalisation of the ideas which underpin Certificate Transparency."
LABEL io.k8s.description="Trillian is an implementation of the concepts described in the Verifiable Data Structures white paper."
LABEL io.k8s.display-name="trillian_log_server"
LABEL io.openshift.tags="trillian-logserver trusted-signer"
LABEL summary="Provides the trillian logserver binary for running trillian logserver"
LABEL com.redhat.component="trillian_log_server"
LABEL name="trillian_log_server"

# Set the binary as the entrypoint of the container
ENTRYPOINT ["/trillian_log_server"]
