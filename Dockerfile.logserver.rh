FROM brew.registry.redhat.io/rh-osbs/openshift-golang-builder:rhel_9_1.23@sha256:96cfceb50f5323efa1aa8569d4420cdbf1bb391225d5171ef72a0d0ecf028467 AS builder
ENV APP_ROOT=/opt/app-root
ENV GOPATH=$APP_ROOT
ENV CGO_ENABLED=false
ENV -buildvcs=false

WORKDIR $APP_ROOT/src/
ADD go.mod go.sum $APP_ROOT/src/
RUN go mod download
RUN git config --global --add safe.directory /opt/app-root/src

# Add source code
ADD ./ $APP_ROOT/src/

RUN go build -mod=mod -v ./cmd/trillian_log_server

# Multi-Stage production build
FROM registry.access.redhat.com/ubi9/ubi-minimal@sha256:f172b3082a3d1bbe789a1057f03883c1113243564f01cd3020e27548b911d3f8 AS deploy

# Retrieve the binary from the previous stage
COPY --from=builder /opt/app-root/src/trillian_log_server /

LABEL description="Trillian is an implementation of the concepts described in the Verifiable Data Structures white paper, which in turn is an extension and generalisation of the ideas which underpin Certificate Transparency."
LABEL io.k8s.description="Trillian is an implementation of the concepts described in the Verifiable Data Structures white paper."
LABEL io.k8s.display-name="trillian_log_server"
LABEL io.openshift.tags="trillian-logserver trusted-signer"
LABEL summary="Provides the trillian logserver binary for running trillian logserver"
LABEL com.redhat.component="trillian_log_server"
LABEL name="trillian_log_server"

# Set the binary as the entrypoint of the container
ENTRYPOINT ["/trillian_log_server"]
